name: Publish packages
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'lerna.json'

permissions:
  id-token: write
  contents: read

env:
  CDN_BUCKET: gc-design-system-production-cdn
  CDN_REGION: ca-central-1

jobs:
  publish-web:
    name: Publish @cdssnc/gcds-components
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "@cdssnc/gcds-components"
            package: "./packages/web"
            dist: "./packages/web"

    steps:
      - name: Git Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Setup Node
        uses: actions/setup-node@eff380dfbcf941bf8832e4acb788cebe13dfd758
        with:
          node-version: 18

      - name: Install ${{ matrix.name }}
        run: npm install

      - name: Build ${{ matrix.name }}
        run: npm run build

      - name: Publish ${{ matrix.name }}
        uses: JS-DevTools/npm-publish@52bacc14a33500e8dcf0afe1bff552d638216212
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ${{ matrix.dist }}
          dry-run: true

      - name: Report deployment to Sentinel
        if: steps.publish.outputs.id != ''
        uses: cds-snc/sentinel-forward-data-action@main
        with:
          input_data: '{"product": "design-system", "sha": "${{ github.sha }}", "version": "${{steps.publish.outputs.id}}", "repository": "${{ github.repository }}", "environment": "production", "status": "${{ job.status }}"}'
          log_type: CDS_Product_Deployment_Data
          log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}


      - name: Slack notify on failure
        if: failure()
        run: |
          json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":red: Publish ${{ matrix.name }} failed: <https://github.com/cds-snc/gcds-components/actions/workflows/compile-and-publish.yml|Publish packages>"}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.SLACK_WEBHOOK_OPS }}

  publish-react-angular-vue:
    name: Publish @cdssnc/gcds-components-react, @cdssnc/gcds-components-angular, @cdssnc/gcds-components-vue
    needs: publish-web
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "@cdssnc/gcds-components-react"
            package: "./packages/react"
            dist: "./packages/react"

          - name: "@cdssnc/gcds-components-angular"
            package: "./packages/angular"
            dist: "./packages/angular/dist"

          - name: "@cdssnc/gcds-components-vue"
            package: "./packages/vue"
            dist: "./packages/vue"

    steps:
      - name: Git Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Setup Node
        uses: actions/setup-node@eff380dfbcf941bf8832e4acb788cebe13dfd758
        with:
          node-version: 18

      - name: Install monorepo (web, react, angular, vue)
        run: npm install

      - name: Build gcds-components (web, react, angular, vue)
        run: npm run build

      - name: Publish ${{ matrix.name }}
        uses: JS-DevTools/npm-publish@52bacc14a33500e8dcf0afe1bff552d638216212
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ${{ matrix.dist }}
          dry-run: true

      - name: Report deployment to Sentinel
        if: steps.publish.outputs.id != ''
        uses: cds-snc/sentinel-forward-data-action@main
        with:
          input_data: '{"product": "design-system", "sha": "${{ github.sha }}", "version": "${{steps.publish.outputs.id}}", "repository": "${{ github.repository }}", "environment": "production", "status": "${{ job.status }}"}'
          log_type: CDS_Product_Deployment_Data
          log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

      - name: Slack notify on failure
        if: failure()
        run: |
          json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":red: Publish ${{ matrix.name }} failed: <https://github.com/cds-snc/gcds-components/actions/workflows/compile-and-publish.yml|Publish packages>"}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.SLACK_WEBHOOK_OPS }}
