name: Publish packages
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'lerna.json'

permissions:
  id-token: write
  contents: read

env:
  CDN_BUCKET: gc-design-system-production-cdn
  CDN_REGION: ca-central-1

jobs:
  publish-web:
    name: Publish @cdssnc/gcds-components
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "@cdssnc/gcds-components"
            package: "./packages/web"
            dist: "./packages/web"

    steps:
      - name: Git Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Setup Node
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d
        with:
          node-version: 18

      - name: Install ${{ matrix.name }}
        run: npm install
        working-directory: ${{ matrix.package }}

      - name: Build ${{ matrix.name }}
        run: npm run build
        working-directory: ${{ matrix.package }}

      - name: Publish ${{ matrix.name }}
        uses: JS-DevTools/npm-publish@0897172f266b017b55f0d68271c4d9124eb20c69
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ${{ matrix.dist }}

      - name: Configure AWS credentials using OIDC
        if: steps.publish.outputs.id != ''
        uses: aws-actions/configure-aws-credentials@04b98b3f9e85f563fb061be8751a0352327246b0 # v3.0.1
        with:
          role-to-assume: arn:aws:iam::307395567143:role/gcds-components-apply
          role-session-name: CDNPublish
          aws-region: ${{ env.CDN_REGION }}

      - name: Update CDN ${{ matrix.name }}
        if: steps.publish.outputs.id != ''
        run: |
          PUBLISHED_PACKAGE="${{ steps.publish.outputs.id }}"

          mkdir -p ./tmp \
            && npm install --prefix ./tmp "$PUBLISHED_PACKAGE" \
            && cd ./tmp/node_modules

          aws s3 sync ./${{ matrix.name }} s3://${{ env.CDN_BUCKET }}/"$PUBLISHED_PACKAGE" --delete
          aws s3 sync ./${{ matrix.name }} s3://${{ env.CDN_BUCKET }}/${{ matrix.name }}@latest --delete
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key "$PUBLISHED_PACKAGE"/package.json
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key ${{ matrix.name }}@latest/package.json

          aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_CLOUDFRONT_DIST_ID }} --paths "/*"
        working-directory: ${{ matrix.package }}

      - name: Slack notify on failure
        if: failure()
        run: |
          json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":red: Publish ${{ matrix.name }} failed: <https://github.com/cds-snc/gcds-components/actions/workflows/compile-and-publish.yml|Publish packages>"}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.SLACK_WEBHOOK_OPS }}

  publish-react-angular:
    name: Publish @cdssnc/gcds-components-react and @cdssnc/gcds-components-angular
    needs: publish-web
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "@cdssnc/gcds-components-react"
            package: "./packages/react"
            dist: "./packages/react"

          - name: "@cdssnc/gcds-components-angular"
            package: "./packages/angular"
            dist: "./packages/angular/dist"
    steps:
      - name: Git Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Setup Node
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d
        with:
          node-version: 18

      - name: Install repo
        run: npm install

      - name: Install gcds-components
        run: npm install
        working-directory: ./packages/web

      - name: Build gcds-components
        run: npm run build
        working-directory: ./packages/web

      - name: Install ${{ matrix.name }}
        run: npm install
        working-directory: ${{ matrix.package }}

      - name: Build ${{ matrix.name }}
        run: npm run build
        working-directory: ${{ matrix.package }}

      - name: Publish ${{ matrix.name }}
        uses: JS-DevTools/npm-publish@0897172f266b017b55f0d68271c4d9124eb20c69
        id: publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ${{ matrix.dist }}

      - name: Configure AWS credentials using OIDC
        if: steps.publish.outputs.id != ''
        uses: aws-actions/configure-aws-credentials@04b98b3f9e85f563fb061be8751a0352327246b0 # v3.0.1
        with:
          role-to-assume: arn:aws:iam::307395567143:role/gcds-components-apply
          role-session-name: CDNPublish
          aws-region: ${{ env.CDN_REGION }}

      - name: Update CDN ${{ matrix.name }}
        if: steps.publish.outputs.id != ''
        run: |
          PUBLISHED_PACKAGE="${{ steps.publish.outputs.id }}"

          mkdir -p ./tmp \
            && npm install --prefix ./tmp "$PUBLISHED_PACKAGE" \
            && cd ./tmp/node_modules

          aws s3 sync ./${{ matrix.name }} s3://${{ env.CDN_BUCKET }}/"$PUBLISHED_PACKAGE" --delete
          aws s3 sync ./${{ matrix.name }} s3://${{ env.CDN_BUCKET }}/${{ matrix.name }}@latest --delete
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key "$PUBLISHED_PACKAGE"/package.json
          aws s3api head-object --bucket ${{ env.CDN_BUCKET }} --key ${{ matrix.name }}@latest/package.json

          aws cloudfront create-invalidation --distribution-id ${{ secrets.CDN_CLOUDFRONT_DIST_ID }} --paths "/*"
        working-directory: ${{ matrix.package }}

      - name: Slack notify on failure
        if: failure()
        run: |
          json='{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":":red: Publish ${{ matrix.name }} failed: <https://github.com/cds-snc/gcds-components/actions/workflows/compile-and-publish.yml|Publish packages>"}}]}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ secrets.SLACK_WEBHOOK_OPS }}

