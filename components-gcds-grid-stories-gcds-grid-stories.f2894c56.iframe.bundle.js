"use strict";(self.webpackChunk_cdssnc_gcds_components=self.webpackChunk_cdssnc_gcds_components||[]).push([[8551],{"./src/components/gcds-grid/stories/gcds-grid.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Columns:()=>Columns,ColumnsDesktop:()=>ColumnsDesktop,ColumnsTablet:()=>ColumnsTablet,Default:()=>Default,EqualFlexbile:()=>EqualFlexbile,EqualWidth:()=>EqualWidth,Playground:()=>Playground,Props:()=>Props,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Grid",argTypes:{columns:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}},type:{required:!0}},columnsTablet:{name:"columns-tablet",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},columnsDesktop:{name:"columns-desktop",control:"text",table:{type:{summary:"string"},defaultValue:{summary:"-"}}},container:{control:{type:"select"},options:["full","xl","lg","md","sm","xs"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},display:{control:{type:"select"},options:["grid","inline-grid"],table:{type:{summary:"string"},defaultValue:{summary:"grid"}}},gap:{control:{type:"select"},options:["0","50","100","150","200","250","300","400","450","500","550","600","700","800","900","1000"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},tag:{control:"text",table:{type:{summary:"string"},defaultValue:{summary:"div"}}},alignContent:{name:"align-content",control:{type:"select"},options:["center","end","space-around","space-between","space-evenly","start","stretch"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},justifyContent:{name:"justify-content",control:{type:"select"},options:["center","end","space-around","space-between","space-evenly","start","stretch"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},placeContent:{name:"place-content",control:{type:"select"},options:["center","end","space-around","space-between","space-evenly","start","stretch"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},alignItems:{name:"align-items",control:{type:"select"},options:["baseline","center","end","start","stretch"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},justifyItems:{name:"justify-items",control:{type:"select"},options:["center","end","start","stretch"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},placeItems:{name:"place-items",control:{type:"select"},options:["center","end","start","stretch"],table:{type:{summary:"string"},defaultValue:{summary:"-"}}},default:{control:{type:"text"},table:{category:"Slots | Fentes"}}}},Template=args=>`\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${"div"!=args.tag?`tag="${args.tag}"`:null} ${"full"!=args.container?`container="${args.container}"`:null} ${args.columnsDesktop?`columns-desktop="${args.columnsDesktop}"`:null} ${args.columnsTablet?`columns-tablet="${args.columnsTablet}"`:null} ${args.columns?`columns="${args.columns}"`:null} ${args.gap?`gap="${args.gap}"`:null} ${args.alignContent?`align-content="${args.alignContent}"`:null} ${args.justifyContent?`justify-content="${args.justifyContent}"`:null} ${args.placeContent?`place-content="${args.placeContent}"`:null} ${args.alignItems?`align-items="${args.alignItems}"`:null} ${args.justifyItems?`justify-items="${args.justifyItems}"`:null} ${args.placeItems?`place-items="${args.placeItems}"`:null}>\n  ${args.default?args.default:null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${"div"!=args.tag?`tag="${args.tag}"`:null} ${"full"!=args.container?`container="${args.container}"`:null} ${args.columnsDesktop?`columnsDesktop="${args.columnsDesktop}"`:null} ${args.columnsTablet?`columnsTablet="${args.columnsTablet}"`:null} ${args.columns?`columns="${args.columns}"`:null} ${args.gap?`gap="${args.gap}"`:null} ${args.alignContent?`alignContent="${args.alignContent}"`:null} ${args.justifyContent?`justifyContent="${args.justifyContent}"`:null} ${args.placeContent?`placeContent="${args.placeContent}"`:null} ${args.alignItems?`alignItems="${args.alignItems}"`:null} ${args.justifyItems?`justifyItems="${args.justifyItems}"`:null} ${args.placeItems?`placeItems="${args.placeItems}"`:null}>\n  ${args.default?args.default:null}\n</GcdsGrid>\n`.replace(/ null/g,""),Default=Template.bind({});Default.args={columnsDesktop:"1fr 1fr 1fr 1fr",columnsTablet:"1fr 1fr",columns:"1fr",container:"full",gap:"400",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const Columns=Template.bind({});Columns.args={columns:"1fr",container:"full",gap:"200",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const ColumnsTablet=Template.bind({});ColumnsTablet.args={columns:"1fr",columnsTablet:"1fr 1fr",container:"full",gap:"200",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const ColumnsDesktop=Template.bind({});ColumnsDesktop.args={columnsDesktop:"1fr 1fr 1fr 1fr",columnsTablet:"1fr 1fr",columns:"1fr",container:"full",gap:"200",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const EqualFlexbile=Template.bind({});EqualFlexbile.args={columnsDesktop:"1fr 1fr 1fr",columnsTablet:"1fr 1fr",columns:"1fr",container:"full",gap:"400",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const EqualWidth=Template.bind({});EqualWidth.args={columns:"repeat(auto-fit, minmax(100px, 250px))",container:"full",gap:"400",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const Props=Template.bind({});Props.args={columns:"repeat(auto-fit, minmax(100px, 200px))",columnsDesktop:"",columnsTablet:"",container:"full",gap:"400",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"};const Playground=(args=>`\n<gcds-grid\n  ${"div"!=args.tag?`tag="${args.tag}"`:null}\n  ${"full"!=args.container?`container="${args.container}"`:null}\n  ${args.columnsDesktop?`columns-desktop="${args.columnsDesktop}"`:null}\n  ${args.columnsTablet?`columns-tablet="${args.columnsTablet}"`:null}\n  ${args.columns?`columns="${args.columns}"`:null}\n  ${args.gap?`gap="${args.gap}"`:null}\n  ${args.alignContent?`align-content="${args.alignContent}"`:null}\n  ${args.justifyContent?`justify-content="${args.justifyContent}"`:null}\n  ${args.placeContent?`place-content="${args.placeContent}"`:null}\n  ${args.alignItems?`align-items="${args.alignItems}"`:null}\n  ${args.justifyItems?`justify-items="${args.justifyItems}"`:null}\n  ${args.placeItems?`place-items="${args.placeItems}"`:null}\n>\n  ${args.default?args.default:null}\n</gcds-grid>\n`).bind({});Playground.args={container:"full",columns:"repeat(auto-fit, minmax(250px, 1fr))",gap:"400",tag:"div",default:"<p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>\n  <p>This is some example content to display the grid component.</p>"},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...Default.parameters?.docs?.source}}},Columns.parameters={...Columns.parameters,docs:{...Columns.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...Columns.parameters?.docs?.source}}},ColumnsTablet.parameters={...ColumnsTablet.parameters,docs:{...ColumnsTablet.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...ColumnsTablet.parameters?.docs?.source}}},ColumnsDesktop.parameters={...ColumnsDesktop.parameters,docs:{...ColumnsDesktop.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...ColumnsDesktop.parameters?.docs?.source}}},EqualFlexbile.parameters={...EqualFlexbile.parameters,docs:{...EqualFlexbile.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...EqualFlexbile.parameters?.docs?.source}}},EqualWidth.parameters={...EqualWidth.parameters,docs:{...EqualWidth.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...EqualWidth.parameters?.docs?.source}}},Props.parameters={...Props.parameters,docs:{...Props.parameters?.docs,source:{originalSource:'args => `\n\x3c!-- Web component code (Angular, Vue) --\x3e\n<gcds-grid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `align-content="${args.alignContent}"` : null} ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null} ${args.placeContent ? `place-content="${args.placeContent}"` : null} ${args.alignItems ? `align-items="${args.alignItems}"` : null} ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null} ${args.placeItems ? `place-items="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</gcds-grid>\n\n\x3c!-- React code --\x3e\n<GcdsGrid ${args.tag != \'div\' ? `tag="${args.tag}"` : null} ${args.container != \'full\' ? `container="${args.container}"` : null} ${args.columnsDesktop ? `columnsDesktop="${args.columnsDesktop}"` : null} ${args.columnsTablet ? `columnsTablet="${args.columnsTablet}"` : null} ${args.columns ? `columns="${args.columns}"` : null} ${args.gap ? `gap="${args.gap}"` : null} ${args.alignContent ? `alignContent="${args.alignContent}"` : null} ${args.justifyContent ? `justifyContent="${args.justifyContent}"` : null} ${args.placeContent ? `placeContent="${args.placeContent}"` : null} ${args.alignItems ? `alignItems="${args.alignItems}"` : null} ${args.justifyItems ? `justifyItems="${args.justifyItems}"` : null} ${args.placeItems ? `placeItems="${args.placeItems}"` : null}>\n  ${args.default ? args.default : null}\n</GcdsGrid>\n`.replace(/ null/g, \'\')',...Props.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'args => `\n<gcds-grid\n  ${args.tag != \'div\' ? `tag="${args.tag}"` : null}\n  ${args.container != \'full\' ? `container="${args.container}"` : null}\n  ${args.columnsDesktop ? `columns-desktop="${args.columnsDesktop}"` : null}\n  ${args.columnsTablet ? `columns-tablet="${args.columnsTablet}"` : null}\n  ${args.columns ? `columns="${args.columns}"` : null}\n  ${args.gap ? `gap="${args.gap}"` : null}\n  ${args.alignContent ? `align-content="${args.alignContent}"` : null}\n  ${args.justifyContent ? `justify-content="${args.justifyContent}"` : null}\n  ${args.placeContent ? `place-content="${args.placeContent}"` : null}\n  ${args.alignItems ? `align-items="${args.alignItems}"` : null}\n  ${args.justifyItems ? `justify-items="${args.justifyItems}"` : null}\n  ${args.placeItems ? `place-items="${args.placeItems}"` : null}\n>\n  ${args.default ? args.default : null}\n</gcds-grid>\n`',...Playground.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Columns","ColumnsTablet","ColumnsDesktop","EqualFlexbile","EqualWidth","Props","Playground"]}}]);